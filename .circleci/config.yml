version: 2
jobs:
  build-and-test-mysql-binlog:
    machine: true
    working_directory: ~/eventuate-tram-view-support
    steps:
      - checkout
      - restore_cache:
          keys:
            - eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - eventuate-tram-view-support-
      - run:
          command: |
            . ./.circleci/setenv-circle-ci.sh
            ./build-and-test-all-mysql-binlog.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Save test results
          command: ./.circleci/save-containers-and-tests.sh
          when: always
  build-and-test-mysql-polling:
    machine: true
    working_directory: ~/eventuate-tram-view-support
    steps:
      - checkout
      - restore_cache:
          keys:
            - eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - eventuate-tram-view-support-
      - run:
          command: |
            . ./.circleci/setenv-circle-ci.sh
            ./build-and-test-all-mysql-polling.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Save test results
          command: ./.circleci/save-containers-and-tests.sh
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - store_artifacts:
          path: ~/container-logs

  build-and-test-postgres-polling:
    machine: true
    working_directory: ~/eventuate-tram-view-support
    steps:
      - checkout
      - restore_cache:
          keys:
            - eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - eventuate-tram-view-support-
      - run:
          command: |
            . ./.circleci/setenv-circle-ci.sh
            ./build-and-test-all-postgres-polling.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Save test results
          command: ./.circleci/save-containers-and-tests.sh
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - store_artifacts:
          path: ~/container-logs

  build-and-test-postgres-wal:
    machine: true
    working_directory: ~/eventuate-tram-view-support
    steps:
      - checkout
      - restore_cache:
          keys:
            - eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - eventuate-tram-view-support-
      - run:
          command: |
            . ./.circleci/setenv-circle-ci.sh
            ./build-and-test-all-postgres-wal.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: eventuate-tram-view-support-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Save test results
          command: ./.circleci/save-containers-and-tests.sh
          when: always

      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - store_artifacts:
          path: ~/container-logs

  publish-artifacts:
    machine: true
    working_directory: ~/eventuate-tram-view-support
    steps:
      - run:
          name: Publish artifacts
          command: ./deploy-artifacts.sh
          when: on_success
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test-mysql-binlog
      - build-and-test-mysql-polling
      - build-and-test-postgres-polling
      - build-and-test-postgres-wal
      - publish-artifacts:
          requires:
            - build-and-test-mysql-binlog
            - build-and-test-mysql-polling
            - build-and-test-postgres-polling
            - build-and-test-postgres-wal
